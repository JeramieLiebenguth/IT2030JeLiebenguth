@model IEnumerable<MVCEnrollmentApplication.Models.Enrollment>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<div class="panel panel-default">
	<div class="panel-heading">Student Search</div>
	<div class="panel-body">
		@using (
			Ajax.BeginForm("StudentSearch", "Enrollments",
			new AjaxOptions
			{
				InsertionMode = InsertionMode.Replace,
				HttpMethod = "GET",
				UpdateTargetId = "searchresults",
				LoadingElementId = "ajax-loader",
				OnFailure = "searchFailed"
			}
			)
			)

		{
			<input type="text" name="q" />
			<input type="submit" value="search" />
			<ing id="ajax-loader" src="@Url.Content("~/Images/ajax-loader.gif")" style="display:none"/>
		}
		<div id="searchresults">

		</div>

	</div>
</div>

<h2></h2>
<div class="panel panel-default">
    <div class="panel-heading">Course Search</div>
    <div class="panel-body">
        @using (
                Ajax.BeginForm("CourseSearch", "Enrollments",
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "GET",
                    UpdateTargetId = "searchresults",
                    LoadingElementId = "ajax-loader",
                    OnFailure = "searchFailed"
                }
                )
                )

        {
            <input type="text" name="q" />
            <input type="submit" value="search" />
            <ing id="ajax-loader" src="@Url.Content("~/Images/ajax-loader.gif")" style="display:none" />
        }
        <div id="searchresults">

        </div>

    </div>
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StudentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourseId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Grade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentObject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourseObject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsActive)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AssignedCampus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EnrollmentSemester)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EnrollmentYear)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StudentId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CourseId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Grade)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentObject)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CourseObject)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsActive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AssignedCampus)
        </td>
        <td>
            @Html.RadioButtonFor(modelItem => item.EnrollmentSemester,"Spring")
            @Html.RadioButtonFor(modelItem => item.EnrollmentSemester, "Summer")
            @Html.RadioButtonFor(modelItem => item.EnrollmentSemester, "Fall")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EnrollmentYear)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EnrollmentId }) |
            @Html.ActionLink("Details", "Details", new { id=item.EnrollmentId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.EnrollmentId })
        </td>
    </tr>
}

</table>
